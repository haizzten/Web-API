@model IEnumerable<f7.Models.Models.Areas.Order.OrderIndexViewModel>

@{
    ViewData["Title"] = "Index";
    var pagingModel = TempData["PagingModel"] as f7.Models.PagingModel;
}

<div class="container" id="modal-container">
    <button id="launch-btn" type="button" class="btn btn-primary" style="display: none" data-bs-toggle="modal"
        data-bs-target="#exampleModal">while u steel hear?</button>
    <div></div>
</div>
@* <div class="container" style="overflow-x: scroll">
    <div class="container-fluid">
    <div class="row flex-nowrap">
    <div class="card-header col-3"></div>
    <div class="card-header col-4">
    @Html.DisplayNameFor(model => model.OrderId)
    </div>
    <div class="card-header col-3">
    @Html.DisplayNameFor(model => model.CreatedDate)
    </div>
    <div class="card-header col-3">
    @Html.DisplayNameFor(model => model.CustomerName)
    </div>
    <div class="card-header col-3">
    @Html.DisplayNameFor(model => model.PaymentMethod)
    </div>
    <div class="card-header col-3">
    @Html.DisplayNameFor(model => model.StaffId)
    </div>
    <div class="card-header col-2">
    @Html.DisplayNameFor(model => model.State)
    </div>
    </div>
    @foreach (var item in Model)
    {
    <div class="row flex-nowrap row-content">
    <div class="col-3">
    <a class="btn btn-secondary mx-1 udpate-btn">Sửa</a>
    <a class="btn btn-info mx-1 detail-btn text-light">Chi tiết</a>
    <a class="btn btn-danger mx-1 delete-btn">Xóa</a>
    <input type="hidden" name="id" value="@item.OrderId">
    </div>
    <div class=" col-4">
    @Html.DisplayFor(modelItem => item.OrderId)
    </div>
    <div class=" col-3">
    @Html.DisplayFor(modelItem => item.CreatedDate)
    </div>
    <div class=" col-3">
    @Html.DisplayFor(modelItem => item.CustomerName)
    </div>
    <div class=" col-3">
    @Html.DisplayFor(modelItem => item.PaymentMethod)
    </div>
    <div class=" col-3">
    @Html.DisplayFor(modelItem => item.StaffId)
    </div>
    <div class=" col-2">
    @Html.DisplayFor(modelItem => item.State)
    </div>
    </div>
    }
    </div>
    </div> *@
<div class="container">
    <div class="table-responsive-xxl">
        <table class="table table-striped table-light caption-top" id="item-table">
            <thead>
                <tr>
                    <th scope="col" style="max-width: 200px">
                        @Html.DisplayNameFor(model => model.OrderId)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.CreatedDate)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.CustomerName)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.PaymentMethod)
                    </th>
                    <th scope="col" class="mw-200">
                        @Html.DisplayNameFor(model => model.StaffName)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.State)
                    </th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="max-width: 200px">
                            @Html.DisplayFor(modelItem => item.OrderId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PaymentMethod)
                        </td>
                        <td class="mw-200 no-wrap">
                            @Html.DisplayFor(modelItem => item.StaffName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.State)
                        </td>
                        <td>
                            @* <a class="update-btn btn btn-secondary">Sửa</a> *@
                            <a class="accept-btn btn btn-success">Thanh toán</a>
                            <a class="detail-btn btn btn-info text-light">Chi tiết</a>
                            <a class="delete-btn btn btn-danger">Hủy đơn</a>
                            <input type="hidden" name="id" value="@item.OrderId">
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="d-flex justify-content-center mt-5">
    <partial name="_PagingPartial" model="@pagingModel" />
</div>

@section Scripts{
<script type="text/javascript">
    $(document).ready(function () {

        $(".detail-btn").on('click', function () {
            var text = $(this).nextAll("input").first().serialize();
            $.ajax({
                type: "GET",
                url: '@Url.Action("Details", "order")',
                contentType: "text/plain",
                data: text,
                success: function (data, status, xhr) {
                    var modalWrapper = $("#launch-btn + div");
                    modalWrapper.html(data);
                    var launchBtn = $("#launch-btn");
                    launchBtn.trigger('click');
                },
                error: function (data, status, xhr) {
                    alert(status);
                }
            });
        });
        $(".delete-btn").click(function () {
            var itemId = $(this).nextAll("input").first();
            var parent = $(this).closest(".row-content");
            var data = itemId.serialize();
            if (confirm("Bạn có chắc muốn xóa ???")) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("delete", "order")',
                    data: data,
                    success: function (data, status, xhr) {
                        alert("Delete successfully");
                        parent.remove();
                    },
                    error: function (data, status, xhr) {
                        alert(data.status);
                    }
                });
            }
        });
        $(".accept-btn").click(function () {
            var itemId = $(this).nextAll("input").first();
            var parent = $(this).closest(".row-content");
            var data = itemId.serialize();
            $.ajax({
                type: "POST",
                url: '@Url.Action("pay", "order")',
                data: data,
                success: function (data, status, xhr) {
                    window.location.href = '@Url.Action("index", "order")';
                },
                error: function (data, status, xhr) {
                    alert(data.status);
                }
            });
        });
    });
</script>
}
